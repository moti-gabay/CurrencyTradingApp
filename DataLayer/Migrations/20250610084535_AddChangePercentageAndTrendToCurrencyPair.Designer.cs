// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610084535_AddChangePercentageAndTrendToCurrencyPair")]
    partial class AddChangePercentageAndTrendToCurrencyPair
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "USD",
                            Country = "United States",
                            Name = "Dollar"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "EUR",
                            Country = "Europe",
                            Name = "Euro"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "JPY",
                            Country = "Japan",
                            Name = "Yen"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "GBP",
                            Country = "United Kingdom",
                            Name = "Pound Sterling"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "CAD",
                            Country = "Canada",
                            Name = "Canadian Dollar"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "AUD",
                            Country = "Australia",
                            Name = "Australian Dollar"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.CurrencyPair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseCurrencyAbbr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ChangePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OriginalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PairName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteCurrencyAbbr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trend")
                        .HasColumnType("int");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CurrencyPairs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BaseCurrencyAbbr = "USD",
                            ChangePercentage = 0.15m,
                            CurrentRate = 151.3377m,
                            InitialRate = 151.3377m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 151.3466m,
                            MinValue = 148.7500m,
                            OriginalId = "USDJPY",
                            PairName = "USD/JPY",
                            QuoteCurrencyAbbr = "JPY",
                            Trend = 0,
                            Volume = 2225354L
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BaseCurrencyAbbr = "USD",
                            ChangePercentage = -0.05m,
                            CurrentRate = 0.8292m,
                            InitialRate = 0.8292m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 0.8456m,
                            MinValue = 0.8291m,
                            OriginalId = "USDEUR",
                            PairName = "USD/EUR",
                            QuoteCurrencyAbbr = "EUR",
                            Trend = 1,
                            Volume = 1370298L
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000003"),
                            BaseCurrencyAbbr = "GBP",
                            ChangePercentage = 0.00m,
                            CurrentRate = 1.2485m,
                            InitialRate = 1.2485m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 1.2678m,
                            MinValue = 1.2485m,
                            OriginalId = "GBPUSD",
                            PairName = "GBP/USD",
                            QuoteCurrencyAbbr = "USD",
                            Trend = 2,
                            Volume = 1007790L
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000004"),
                            BaseCurrencyAbbr = "CAD",
                            ChangePercentage = 0.08m,
                            CurrentRate = 0.7334m,
                            InitialRate = 0.7334m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 0.7350m,
                            MinValue = 0.7250m,
                            OriginalId = "CADUSD",
                            PairName = "CAD/USD",
                            QuoteCurrencyAbbr = "USD",
                            Trend = 0,
                            Volume = 606143L
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000005"),
                            BaseCurrencyAbbr = "EUR",
                            ChangePercentage = -0.20m,
                            CurrentRate = 162.7026m,
                            InitialRate = 162.7026m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 163.5000m,
                            MinValue = 162.0000m,
                            OriginalId = "EURJPY",
                            PairName = "EUR/JPY",
                            QuoteCurrencyAbbr = "JPY",
                            Trend = 1,
                            Volume = 507156L
                        },
                        new
                        {
                            Id = new Guid("a0000000-0000-0000-0000-000000000006"),
                            BaseCurrencyAbbr = "AUD",
                            ChangePercentage = 0.00m,
                            CurrentRate = 0.6624m,
                            InitialRate = 0.6624m,
                            LastUpdate = new DateTime(2024, 6, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            MaxValue = 0.6700m,
                            MinValue = 0.6600m,
                            OriginalId = "AUDUSD",
                            PairName = "AUD/USD",
                            QuoteCurrencyAbbr = "USD",
                            Trend = 2,
                            Volume = 490210L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
